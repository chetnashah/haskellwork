
factors :: Int -> [Int]
factors n = [x | x <- [1..n], n `mod` x == 0]


-- n gets smaller every recursive call
prfac :: Int -> [Int]
prfac n =
  case factors of
    [] -> [n]
    _  -> factors ++ prfac (n `div` (head factors))
    where factors = take 1 $ filter (\x -> (n `mod` x) == 0) [2..n-1]

main = do
  putStrLn (" factors = " ++ show (prfac 20))
